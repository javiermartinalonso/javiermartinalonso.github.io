ejemplos
https://docs.gitlab.com/ee/ci/examples/README.html
https://gitlab.com/gitlab-examples

- ejemplos tastk gitlab-ci
https://gitlab.com/gitlab-org/gitlab-foss/tree/master/lib/gitlab/ci/templates


- despliegues segun el entorno
https://gitlab.com/gitlab-examples/kubernetes-example/-/blob/master/.gitlab-ci.yml
https://docs.gitlab.com/ee/ci/environments.html
https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
https://docs.gitlab.com/ee/ci/yaml/#onlyexcept-advanced


- ejecutar tareas segun, branch, cambios en ficheros etc
https://docs.gitlab.com/ee/ci/merge_request_pipelines/index.html


Si alguno de los comandos de script devuelve un código de salida diferente de cero, el trabajo fallará y no se ejecutarán más comandos. Este comportamiento se puede evitar almacenando el código de salida en una variable:
https://docs.gitlab.com/ee/ci/yaml/

job:
  script:
    - false && true; exit_code=$?
    - if [ $exit_code -ne 0 ]; then echo "Previous command failed"; fi;
	
	
- cuando se ejecuta un trabajo, dependiendo del commit o del branch, ...
https://docs.gitlab.com/ee/ci/yaml/#only-and-except-simplified	
	
- dividir en varias lineas
https://gitlab.cern.ch/invenio/template-openshift/issues/7